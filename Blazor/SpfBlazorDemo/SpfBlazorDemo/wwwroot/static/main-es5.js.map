{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","hubConnection","withUrl","build","messages","start","console","log","err","on","msg","push","invoke","sendMessage","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Component, OnInit} from '@angular/core';\nimport * as signalR from '@aspnet/signalr';\n\n@Component({\n  selector: 'spfa-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  private hubConnection = new signalR.HubConnectionBuilder()\n    .withUrl('../spfHub')\n    .build();\n\n  public messages: string[] = [];\n\n  constructor() {\n\n  }\n\n  public ngOnInit(): void {\n    this.hubConnection.start()\n        .then(() => console.log('Connected!'))\n        .catch(err => console.log('Error while starting connection: ' + err));\n\n    this.hubConnection.on('BroadcastAsync', (msg: string) => {\n      this.messages.push(msg);\n    });\n  }\n\n  public sendMessage(): void {\n    this.hubConnection.invoke('BroadcastAsync', 'Hallo von Angular :D')\n      .catch(err => console.log);\n  }\n}\n","<div fxFlex=\"100\" fxLayout=\"row\" fxLayoutAlign=\"center start\">\n  <mat-card fxFlex=\"90\">\n    <mat-card-header>\n      <mat-card-title>Angular App</mat-card-title>\n    </mat-card-header>\n    <mat-card-content fxLayout=\"column\">\n      <div class=\"angular-div-container\" >\n        <button (click)=\"sendMessage()\" mat-button color=\"primary\">Greetings @Blazor</button>\n        <mat-list role=\"list\">\n          <mat-list-item role=\"listitem\" *ngFor=\"let message of messages\">{{ message }}</mat-list-item>\n        </mat-list>\n      </div>\n    </mat-card-content>\n  </mat-card>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport {MatButtonModule} from '@angular/material/button';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {MatListModule} from '@angular/material/list';\nimport {MatCardModule} from '@angular/material/card';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    MatButtonModule,\n    MatListModule,\n    MatCardModule,\n    FlexLayoutModule,\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}